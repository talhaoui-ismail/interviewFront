import { ClockFaceTime } from '../models/clock-face-time.interface';
import { Observable } from 'rxjs';
import { TimePeriod } from '../models/time-period.enum';
import { DateTime } from 'luxon';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMaterialTimepickerService {
    private hourSubject;
    private minuteSubject;
    private periodSubject;
    hour: ClockFaceTime;
    readonly selectedHour: Observable<ClockFaceTime>;
    minute: ClockFaceTime;
    readonly selectedMinute: Observable<ClockFaceTime>;
    period: TimePeriod;
    readonly selectedPeriod: Observable<TimePeriod>;
    setDefaultTimeIfAvailable(time: string, min: DateTime, max: DateTime, format: number, minutesGap?: number): void;
    getFullTime(format: number): string;
    private setDefaultTime;
    private resetTime;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NgxMaterialTimepickerService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXIuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJuZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsb2NrRmFjZVRpbWUgfSBmcm9tICcuLi9tb2RlbHMvY2xvY2stZmFjZS10aW1lLmludGVyZmFjZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBUaW1lUGVyaW9kIH0gZnJvbSAnLi4vbW9kZWxzL3RpbWUtcGVyaW9kLmVudW0nO1xuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGhvdXJTdWJqZWN0O1xuICAgIHByaXZhdGUgbWludXRlU3ViamVjdDtcbiAgICBwcml2YXRlIHBlcmlvZFN1YmplY3Q7XG4gICAgaG91cjogQ2xvY2tGYWNlVGltZTtcbiAgICByZWFkb25seSBzZWxlY3RlZEhvdXI6IE9ic2VydmFibGU8Q2xvY2tGYWNlVGltZT47XG4gICAgbWludXRlOiBDbG9ja0ZhY2VUaW1lO1xuICAgIHJlYWRvbmx5IHNlbGVjdGVkTWludXRlOiBPYnNlcnZhYmxlPENsb2NrRmFjZVRpbWU+O1xuICAgIHBlcmlvZDogVGltZVBlcmlvZDtcbiAgICByZWFkb25seSBzZWxlY3RlZFBlcmlvZDogT2JzZXJ2YWJsZTxUaW1lUGVyaW9kPjtcbiAgICBzZXREZWZhdWx0VGltZUlmQXZhaWxhYmxlKHRpbWU6IHN0cmluZywgbWluOiBEYXRlVGltZSwgbWF4OiBEYXRlVGltZSwgZm9ybWF0OiBudW1iZXIsIG1pbnV0ZXNHYXA/OiBudW1iZXIpOiB2b2lkO1xuICAgIGdldEZ1bGxUaW1lKGZvcm1hdDogbnVtYmVyKTogc3RyaW5nO1xuICAgIHByaXZhdGUgc2V0RGVmYXVsdFRpbWU7XG4gICAgcHJpdmF0ZSByZXNldFRpbWU7XG59XG4iXX0=