import { ElementRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { NgxMaterialTimepickerComponent } from '../ngx-material-timepicker.component';
import { ControlValueAccessor } from '@angular/forms';
import { DateTime } from 'luxon';
import * as ɵngcc0 from '@angular/core';
export declare class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {
    private elementRef;
    private locale;
    format: number;
    private _format;
    min: string | DateTime;
    private _min;
    max: string | DateTime;
    private _max;
    timepicker: NgxMaterialTimepickerComponent;
    private _timepicker;
    value: string;
    private _value;
    disabled: boolean;
    disableClick: boolean;
    private timepickerSubscriptions;
    private previousFormat;
    onTouched: () => void;
    private onChange;
    constructor(elementRef: ElementRef, locale: string);
    readonly element: any;
    private defaultTime;
    updateValue(value: string): void;
    ngOnChanges(changes: SimpleChanges): void;
    onClick(event: any): void;
    writeValue(value: string): void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    ngOnDestroy(): void;
    private registerTimepicker;
    private updateInputValue;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TimepickerDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TimepickerDirective, "[ngxTimepicker]", never, {
    "format": "format";
    "min": "min";
    "max": "max";
    "timepicker": "ngxTimepicker";
    "value": "value";
    "disabled": "disabled";
    "disableClick": "disableClick";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRpbWVwaWNrZXIuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbIm5neC10aW1lcGlja2VyLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmd4TWF0ZXJpYWxUaW1lcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi4vbmd4LW1hdGVyaWFsLXRpbWVwaWNrZXIuY29tcG9uZW50JztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUaW1lcGlja2VyRGlyZWN0aXZlIGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSBsb2NhbGU7XG4gICAgZm9ybWF0OiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfZm9ybWF0O1xuICAgIG1pbjogc3RyaW5nIHwgRGF0ZVRpbWU7XG4gICAgcHJpdmF0ZSBfbWluO1xuICAgIG1heDogc3RyaW5nIHwgRGF0ZVRpbWU7XG4gICAgcHJpdmF0ZSBfbWF4O1xuICAgIHRpbWVwaWNrZXI6IE5neE1hdGVyaWFsVGltZXBpY2tlckNvbXBvbmVudDtcbiAgICBwcml2YXRlIF90aW1lcGlja2VyO1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfdmFsdWU7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgZGlzYWJsZUNsaWNrOiBib29sZWFuO1xuICAgIHByaXZhdGUgdGltZXBpY2tlclN1YnNjcmlwdGlvbnM7XG4gICAgcHJpdmF0ZSBwcmV2aW91c0Zvcm1hdDtcbiAgICBvblRvdWNoZWQ6ICgpID0+IHZvaWQ7XG4gICAgcHJpdmF0ZSBvbkNoYW5nZTtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBsb2NhbGU6IHN0cmluZyk7XG4gICAgcmVhZG9ubHkgZWxlbWVudDogYW55O1xuICAgIHByaXZhdGUgZGVmYXVsdFRpbWU7XG4gICAgdXBkYXRlVmFsdWUodmFsdWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgb25DbGljayhldmVudDogYW55KTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46ICh2YWx1ZTogYW55KSA9PiB2b2lkKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogKCkgPT4gdm9pZCk6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZShpc0Rpc2FibGVkOiBib29sZWFuKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgcmVnaXN0ZXJUaW1lcGlja2VyO1xuICAgIHByaXZhdGUgdXBkYXRlSW5wdXRWYWx1ZTtcbn1cbiJdfQ==