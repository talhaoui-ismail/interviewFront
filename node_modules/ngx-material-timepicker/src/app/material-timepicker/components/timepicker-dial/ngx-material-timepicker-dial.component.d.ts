import { EventEmitter, OnChanges, SimpleChanges, TemplateRef } from '@angular/core';
import { TimePeriod } from '../../models/time-period.enum';
import { TimeUnit } from '../../models/time-unit.enum';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import { DateTime } from 'luxon';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMaterialTimepickerDialComponent implements OnChanges {
    private locale;
    timeUnit: typeof TimeUnit;
    hours: ClockFaceTime[];
    minutes: ClockFaceTime[];
    meridiems: string[];
    isHintVisible: boolean;
    editableHintTmpl: TemplateRef<Node>;
    hour: number | string;
    minute: number | string;
    format: number;
    period: TimePeriod;
    activeTimeUnit: TimeUnit;
    minTime: DateTime;
    maxTime: DateTime;
    isEditable: boolean;
    minutesGap: number;
    hoursOnly: boolean;
    periodChanged: EventEmitter<TimePeriod>;
    timeUnitChanged: EventEmitter<TimeUnit>;
    hourChanged: EventEmitter<ClockFaceTime>;
    minuteChanged: EventEmitter<ClockFaceTime>;
    constructor(locale: string);
    ngOnChanges(changes: SimpleChanges): void;
    changeTimeUnit(unit: TimeUnit): void;
    changePeriod(period: TimePeriod): void;
    changeHour(hour: ClockFaceTime): void;
    changeMinute(minute: ClockFaceTime): void;
    showHint(): void;
    hideHint(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerDialComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxMaterialTimepickerDialComponent, "ngx-material-timepicker-dial", never, {
    "editableHintTmpl": "editableHintTmpl";
    "hour": "hour";
    "minute": "minute";
    "format": "format";
    "period": "period";
    "activeTimeUnit": "activeTimeUnit";
    "minTime": "minTime";
    "maxTime": "maxTime";
    "isEditable": "isEditable";
    "minutesGap": "minutesGap";
    "hoursOnly": "hoursOnly";
}, {
    "periodChanged": "periodChanged";
    "timeUnitChanged": "timeUnitChanged";
    "hourChanged": "hourChanged";
    "minuteChanged": "minuteChanged";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItZGlhbC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItZGlhbC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4QkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRpbWVQZXJpb2QgfSBmcm9tICcuLi8uLi9tb2RlbHMvdGltZS1wZXJpb2QuZW51bSc7XG5pbXBvcnQgeyBUaW1lVW5pdCB9IGZyb20gJy4uLy4uL21vZGVscy90aW1lLXVuaXQuZW51bSc7XG5pbXBvcnQgeyBDbG9ja0ZhY2VUaW1lIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2Nsb2NrLWZhY2UtdGltZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgRGF0ZVRpbWUgfSBmcm9tICdsdXhvbic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJEaWFsQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBwcml2YXRlIGxvY2FsZTtcbiAgICB0aW1lVW5pdDogdHlwZW9mIFRpbWVVbml0O1xuICAgIGhvdXJzOiBDbG9ja0ZhY2VUaW1lW107XG4gICAgbWludXRlczogQ2xvY2tGYWNlVGltZVtdO1xuICAgIG1lcmlkaWVtczogc3RyaW5nW107XG4gICAgaXNIaW50VmlzaWJsZTogYm9vbGVhbjtcbiAgICBlZGl0YWJsZUhpbnRUbXBsOiBUZW1wbGF0ZVJlZjxOb2RlPjtcbiAgICBob3VyOiBudW1iZXIgfCBzdHJpbmc7XG4gICAgbWludXRlOiBudW1iZXIgfCBzdHJpbmc7XG4gICAgZm9ybWF0OiBudW1iZXI7XG4gICAgcGVyaW9kOiBUaW1lUGVyaW9kO1xuICAgIGFjdGl2ZVRpbWVVbml0OiBUaW1lVW5pdDtcbiAgICBtaW5UaW1lOiBEYXRlVGltZTtcbiAgICBtYXhUaW1lOiBEYXRlVGltZTtcbiAgICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICAgIG1pbnV0ZXNHYXA6IG51bWJlcjtcbiAgICBob3Vyc09ubHk6IGJvb2xlYW47XG4gICAgcGVyaW9kQ2hhbmdlZDogRXZlbnRFbWl0dGVyPFRpbWVQZXJpb2Q+O1xuICAgIHRpbWVVbml0Q2hhbmdlZDogRXZlbnRFbWl0dGVyPFRpbWVVbml0PjtcbiAgICBob3VyQ2hhbmdlZDogRXZlbnRFbWl0dGVyPENsb2NrRmFjZVRpbWU+O1xuICAgIG1pbnV0ZUNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxDbG9ja0ZhY2VUaW1lPjtcbiAgICBjb25zdHJ1Y3Rvcihsb2NhbGU6IHN0cmluZyk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgY2hhbmdlVGltZVVuaXQodW5pdDogVGltZVVuaXQpOiB2b2lkO1xuICAgIGNoYW5nZVBlcmlvZChwZXJpb2Q6IFRpbWVQZXJpb2QpOiB2b2lkO1xuICAgIGNoYW5nZUhvdXIoaG91cjogQ2xvY2tGYWNlVGltZSk6IHZvaWQ7XG4gICAgY2hhbmdlTWludXRlKG1pbnV0ZTogQ2xvY2tGYWNlVGltZSk6IHZvaWQ7XG4gICAgc2hvd0hpbnQoKTogdm9pZDtcbiAgICBoaWRlSGludCgpOiB2b2lkO1xufVxuIl19