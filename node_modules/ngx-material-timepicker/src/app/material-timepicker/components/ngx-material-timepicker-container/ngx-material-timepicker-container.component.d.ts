import { OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import { TimePeriod } from '../../models/time-period.enum';
import { TimeUnit } from '../../models/time-unit.enum';
import { DateTime } from 'luxon';
import { AnimationEvent } from '@angular/animations';
import { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';
import { Observable } from 'rxjs';
import { TimepickerRef } from '../../models/timepicker-ref.interface';
import { TimepickerConfig } from '../../models/timepicker-config.interface';
import { NgxMaterialTimepickerEventService } from '../../services/ngx-material-timepicker-event.service';
import { NgxMaterialTimepickerTheme } from '../../models/ngx-material-timepicker-theme.interface';
import * as ɵngcc0 from '@angular/core';
export declare enum AnimationState {
    ENTER = "enter",
    LEAVE = "leave"
}
export declare class NgxMaterialTimepickerContainerComponent implements OnInit, OnDestroy, TimepickerConfig {
    private timepickerService;
    private eventService;
    private locale;
    selectedHour: Observable<ClockFaceTime>;
    selectedMinute: Observable<ClockFaceTime>;
    selectedPeriod: Observable<TimePeriod>;
    timeUnit: typeof TimeUnit;
    activeTimeUnit: TimeUnit;
    animationState: AnimationState;
    cancelBtnTmpl: TemplateRef<Node>;
    editableHintTmpl: TemplateRef<Node>;
    confirmBtnTmpl: TemplateRef<Node>;
    inputElement: any;
    enableKeyboardInput: boolean;
    preventOverlayClick: boolean;
    disableAnimation: boolean;
    disabled: boolean;
    appendToInput: boolean;
    hoursOnly: boolean;
    format: number;
    minutesGap: number;
    minTime: DateTime;
    maxTime: DateTime;
    time: string;
    timepickerClass: string;
    theme: NgxMaterialTimepickerTheme;
    timepickerBaseRef: TimepickerRef;
    defaultTime: string;
    private _defaultTime;
    private unsubscribe;
    constructor(timepickerService: NgxMaterialTimepickerService, eventService: NgxMaterialTimepickerEventService, locale: string);
    onKeydown(e: any): void;
    ngOnInit(): void;
    onHourChange(hour: ClockFaceTime): void;
    onHourSelected(hour: number): void;
    onMinuteChange(minute: ClockFaceTime): void;
    changePeriod(period: TimePeriod): void;
    changeTimeUnit(unit: TimeUnit): void;
    setTime(): void;
    close(): void;
    animationDone(event: AnimationEvent): void;
    ngOnDestroy(): void;
    private setDefaultTime;
    private defineTime;
    private onTimeChange;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerContainerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxMaterialTimepickerContainerComponent, "ngx-material-timepicker-container", never, {
    "defaultTime": "defaultTime";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1jb250YWluZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0RBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25EZXN0cm95LCBPbkluaXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbG9ja0ZhY2VUaW1lIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2Nsb2NrLWZhY2UtdGltZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGltZVBlcmlvZCB9IGZyb20gJy4uLy4uL21vZGVscy90aW1lLXBlcmlvZC5lbnVtJztcbmltcG9ydCB7IFRpbWVVbml0IH0gZnJvbSAnLi4vLi4vbW9kZWxzL3RpbWUtdW5pdC5lbnVtJztcbmltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nO1xuaW1wb3J0IHsgQW5pbWF0aW9uRXZlbnQgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IE5neE1hdGVyaWFsVGltZXBpY2tlclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci5zZXJ2aWNlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFRpbWVwaWNrZXJSZWYgfSBmcm9tICcuLi8uLi9tb2RlbHMvdGltZXBpY2tlci1yZWYuaW50ZXJmYWNlJztcbmltcG9ydCB7IFRpbWVwaWNrZXJDb25maWcgfSBmcm9tICcuLi8uLi9tb2RlbHMvdGltZXBpY2tlci1jb25maWcuaW50ZXJmYWNlJztcbmltcG9ydCB7IE5neE1hdGVyaWFsVGltZXBpY2tlckV2ZW50U2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL25neC1tYXRlcmlhbC10aW1lcGlja2VyLWV2ZW50LnNlcnZpY2UnO1xuaW1wb3J0IHsgTmd4TWF0ZXJpYWxUaW1lcGlja2VyVGhlbWUgfSBmcm9tICcuLi8uLi9tb2RlbHMvbmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItdGhlbWUuaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGVudW0gQW5pbWF0aW9uU3RhdGUge1xuICAgIEVOVEVSID0gXCJlbnRlclwiLFxuICAgIExFQVZFID0gXCJsZWF2ZVwiXG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJDb250YWluZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgVGltZXBpY2tlckNvbmZpZyB7XG4gICAgcHJpdmF0ZSB0aW1lcGlja2VyU2VydmljZTtcbiAgICBwcml2YXRlIGV2ZW50U2VydmljZTtcbiAgICBwcml2YXRlIGxvY2FsZTtcbiAgICBzZWxlY3RlZEhvdXI6IE9ic2VydmFibGU8Q2xvY2tGYWNlVGltZT47XG4gICAgc2VsZWN0ZWRNaW51dGU6IE9ic2VydmFibGU8Q2xvY2tGYWNlVGltZT47XG4gICAgc2VsZWN0ZWRQZXJpb2Q6IE9ic2VydmFibGU8VGltZVBlcmlvZD47XG4gICAgdGltZVVuaXQ6IHR5cGVvZiBUaW1lVW5pdDtcbiAgICBhY3RpdmVUaW1lVW5pdDogVGltZVVuaXQ7XG4gICAgYW5pbWF0aW9uU3RhdGU6IEFuaW1hdGlvblN0YXRlO1xuICAgIGNhbmNlbEJ0blRtcGw6IFRlbXBsYXRlUmVmPE5vZGU+O1xuICAgIGVkaXRhYmxlSGludFRtcGw6IFRlbXBsYXRlUmVmPE5vZGU+O1xuICAgIGNvbmZpcm1CdG5UbXBsOiBUZW1wbGF0ZVJlZjxOb2RlPjtcbiAgICBpbnB1dEVsZW1lbnQ6IGFueTtcbiAgICBlbmFibGVLZXlib2FyZElucHV0OiBib29sZWFuO1xuICAgIHByZXZlbnRPdmVybGF5Q2xpY2s6IGJvb2xlYW47XG4gICAgZGlzYWJsZUFuaW1hdGlvbjogYm9vbGVhbjtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBhcHBlbmRUb0lucHV0OiBib29sZWFuO1xuICAgIGhvdXJzT25seTogYm9vbGVhbjtcbiAgICBmb3JtYXQ6IG51bWJlcjtcbiAgICBtaW51dGVzR2FwOiBudW1iZXI7XG4gICAgbWluVGltZTogRGF0ZVRpbWU7XG4gICAgbWF4VGltZTogRGF0ZVRpbWU7XG4gICAgdGltZTogc3RyaW5nO1xuICAgIHRpbWVwaWNrZXJDbGFzczogc3RyaW5nO1xuICAgIHRoZW1lOiBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJUaGVtZTtcbiAgICB0aW1lcGlja2VyQmFzZVJlZjogVGltZXBpY2tlclJlZjtcbiAgICBkZWZhdWx0VGltZTogc3RyaW5nO1xuICAgIHByaXZhdGUgX2RlZmF1bHRUaW1lO1xuICAgIHByaXZhdGUgdW5zdWJzY3JpYmU7XG4gICAgY29uc3RydWN0b3IodGltZXBpY2tlclNlcnZpY2U6IE5neE1hdGVyaWFsVGltZXBpY2tlclNlcnZpY2UsIGV2ZW50U2VydmljZTogTmd4TWF0ZXJpYWxUaW1lcGlja2VyRXZlbnRTZXJ2aWNlLCBsb2NhbGU6IHN0cmluZyk7XG4gICAgb25LZXlkb3duKGU6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBvbkhvdXJDaGFuZ2UoaG91cjogQ2xvY2tGYWNlVGltZSk6IHZvaWQ7XG4gICAgb25Ib3VyU2VsZWN0ZWQoaG91cjogbnVtYmVyKTogdm9pZDtcbiAgICBvbk1pbnV0ZUNoYW5nZShtaW51dGU6IENsb2NrRmFjZVRpbWUpOiB2b2lkO1xuICAgIGNoYW5nZVBlcmlvZChwZXJpb2Q6IFRpbWVQZXJpb2QpOiB2b2lkO1xuICAgIGNoYW5nZVRpbWVVbml0KHVuaXQ6IFRpbWVVbml0KTogdm9pZDtcbiAgICBzZXRUaW1lKCk6IHZvaWQ7XG4gICAgY2xvc2UoKTogdm9pZDtcbiAgICBhbmltYXRpb25Eb25lKGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIHNldERlZmF1bHRUaW1lO1xuICAgIHByaXZhdGUgZGVmaW5lVGltZTtcbiAgICBwcml2YXRlIG9uVGltZUNoYW5nZTtcbn1cbiJdfQ==