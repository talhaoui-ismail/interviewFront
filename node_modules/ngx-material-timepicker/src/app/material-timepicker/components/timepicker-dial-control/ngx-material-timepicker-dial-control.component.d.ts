import { EventEmitter } from '@angular/core';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import { TimeUnit } from '../../models/time-unit.enum';
import { TimeParserPipe } from '../../pipes/time-parser.pipe';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMaterialTimepickerDialControlComponent {
    private timeParserPipe;
    previousTime: number | string;
    timeList: ClockFaceTime[];
    timeUnit: TimeUnit;
    time: string;
    isActive: boolean;
    isEditable: boolean;
    minutesGap: number;
    disabled: boolean;
    timeUnitChanged: EventEmitter<TimeUnit>;
    timeChanged: EventEmitter<ClockFaceTime>;
    focused: EventEmitter<null>;
    unfocused: EventEmitter<null>;
    constructor(timeParserPipe: TimeParserPipe);
    private readonly selectedTime;
    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void;
    updateTime(): void;
    changeTimeByKeyboard(e: any): void;
    onKeydown(e: any): void;
    onModelChange(value: string): void;
    private changeTimeByArrow;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerDialControlComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxMaterialTimepickerDialControlComponent, "ngx-material-timepicker-dial-control", never, {
    "time": "time";
    "timeList": "timeList";
    "timeUnit": "timeUnit";
    "isActive": "isActive";
    "isEditable": "isEditable";
    "minutesGap": "minutesGap";
    "disabled": "disabled";
}, {
    "timeUnitChanged": "timeUnitChanged";
    "timeChanged": "timeChanged";
    "focused": "focused";
    "unfocused": "unfocused";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItZGlhbC1jb250cm9sLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1kaWFsLWNvbnRyb2wuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENsb2NrRmFjZVRpbWUgfSBmcm9tICcuLi8uLi9tb2RlbHMvY2xvY2stZmFjZS10aW1lLmludGVyZmFjZSc7XG5pbXBvcnQgeyBUaW1lVW5pdCB9IGZyb20gJy4uLy4uL21vZGVscy90aW1lLXVuaXQuZW51bSc7XG5pbXBvcnQgeyBUaW1lUGFyc2VyUGlwZSB9IGZyb20gJy4uLy4uL3BpcGVzL3RpbWUtcGFyc2VyLnBpcGUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmd4TWF0ZXJpYWxUaW1lcGlja2VyRGlhbENvbnRyb2xDb21wb25lbnQge1xuICAgIHByaXZhdGUgdGltZVBhcnNlclBpcGU7XG4gICAgcHJldmlvdXNUaW1lOiBudW1iZXIgfCBzdHJpbmc7XG4gICAgdGltZUxpc3Q6IENsb2NrRmFjZVRpbWVbXTtcbiAgICB0aW1lVW5pdDogVGltZVVuaXQ7XG4gICAgdGltZTogc3RyaW5nO1xuICAgIGlzQWN0aXZlOiBib29sZWFuO1xuICAgIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gICAgbWludXRlc0dhcDogbnVtYmVyO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHRpbWVVbml0Q2hhbmdlZDogRXZlbnRFbWl0dGVyPFRpbWVVbml0PjtcbiAgICB0aW1lQ2hhbmdlZDogRXZlbnRFbWl0dGVyPENsb2NrRmFjZVRpbWU+O1xuICAgIGZvY3VzZWQ6IEV2ZW50RW1pdHRlcjxudWxsPjtcbiAgICB1bmZvY3VzZWQ6IEV2ZW50RW1pdHRlcjxudWxsPjtcbiAgICBjb25zdHJ1Y3Rvcih0aW1lUGFyc2VyUGlwZTogVGltZVBhcnNlclBpcGUpO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgc2VsZWN0ZWRUaW1lO1xuICAgIHNhdmVUaW1lQW5kQ2hhbmdlVGltZVVuaXQoZXZlbnQ6IEZvY3VzRXZlbnQsIHVuaXQ6IFRpbWVVbml0KTogdm9pZDtcbiAgICB1cGRhdGVUaW1lKCk6IHZvaWQ7XG4gICAgY2hhbmdlVGltZUJ5S2V5Ym9hcmQoZTogYW55KTogdm9pZDtcbiAgICBvbktleWRvd24oZTogYW55KTogdm9pZDtcbiAgICBvbk1vZGVsQ2hhbmdlKHZhbHVlOiBzdHJpbmcpOiB2b2lkO1xuICAgIHByaXZhdGUgY2hhbmdlVGltZUJ5QXJyb3c7XG59XG4iXX0=